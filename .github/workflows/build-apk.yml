name: build-apk

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libpython3-dev \
            python3-pip \
            build-essential \
            git \
            unzip \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            cmake \
            libffi-dev \
            libssl-dev \
            lld \
            llvm
            
      - name: Upgrade pip and install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel
          pip install buildozer cython==0.29.33
          
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/.android
          key: android-sdk-${{ runner.os }}
          
      - name: Set up Android SDK
        run: |
          export ANDROID_SDK_ROOT=$HOME/.android/sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          
          # Download and install command line tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip
          mv cmdline-tools latest
          
          # Set environment variables
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV
          
      - name: Accept Android licenses and install packages
        run: |
          export ANDROID_SDK_ROOT=$HOME/.android/sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          
          # Accept licenses
          yes | sdkmanager --licenses || true
          
          # Install required packages
          sdkmanager "platform-tools"
          sdkmanager "platforms;android-33"
          sdkmanager "platforms;android-34"
          sdkmanager "build-tools;33.0.2"
          sdkmanager "build-tools;34.0.0"
          sdkmanager "ndk;25.2.9519653"
          
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          
      - name: Cache Buildozer dependencies
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: buildozer-deps-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          
      - name: Build APK with Buildozer
        run: |
          export ANDROID_SDK_ROOT=$HOME/.android/sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          
          # Initialize buildozer if buildozer.spec doesn't exist
          if [ ! -f "buildozer.spec" ]; then
            buildozer init
          fi
          
          # Build the APK
          buildozer android debug
        env:
          PYTHONUNBUFFERED: 1
          
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: app-debug-apk
          path: bin/*.apk
          retention-days: 7
          
      - name: Upload build logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs
          path: .buildozer/
          retention-days: 3